$date
	Sun May 14 12:42:20 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module pc_tb $end
$var wire 10 ! pc_out [9:0] $end
$var reg 1 " branch $end
$var reg 1 # clk $end
$var reg 21 $ immediate [20:0] $end
$var reg 2 % mem_to_reg [1:0] $end
$var reg 32 & reg_out1 [31:0] $end
$var reg 1 ' reset $end
$scope module uut $end
$var wire 1 " branch $end
$var wire 1 # clk $end
$var wire 21 ( immediate [20:0] $end
$var wire 2 ) mem_to_reg [1:0] $end
$var wire 32 * reg_out1 [31:0] $end
$var wire 1 ' reset $end
$var reg 10 + pc_out [9:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx +
bx *
bx )
bx (
1'
bx &
bx %
bx $
0#
x"
bx !
$end
#5000
b0 !
b0 +
1#
#10000
0#
0"
0'
#15000
b100 !
b100 +
1#
#20000
0#
#25000
b1000 !
b1000 +
1#
#30000
0#
b11000100 $
b11000100 (
1"
#35000
b11001100 !
b11001100 +
1#
#40000
0#
b1100100000 $
b1100100000 (
b10 %
b10 )
#45000
b1111101100 !
b1111101100 +
1#
#50000
0#
b10100 $
b10100 (
b1111 &
b1111 *
b11 %
b11 )
#55000
b100011 !
b100011 +
1#
#60000
0#
