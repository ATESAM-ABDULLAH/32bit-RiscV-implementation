$date
	Sat May 13 17:13:20 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module reg_file_tb $end
$var wire 32 ! out2 [31:0] $end
$var wire 32 " out1 [31:0] $end
$var reg 1 # clk $end
$var reg 5 $ rd [4:0] $end
$var reg 5 % rs1 [4:0] $end
$var reg 5 & rs2 [4:0] $end
$var reg 1 ' write $end
$var reg 32 ( write_data [31:0] $end
$scope module uut $end
$var wire 1 # clk $end
$var wire 5 ) rd [4:0] $end
$var wire 5 * rs1 [4:0] $end
$var wire 5 + rs2 [4:0] $end
$var wire 1 ' write $end
$var wire 32 , write_data [31:0] $end
$var reg 32 - out1 [31:0] $end
$var reg 32 . out2 [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
x'
bx &
bx %
bx $
0#
bx "
bx !
$end
#5000
1#
#10000
0#
b10 &
b10 +
b1 %
b1 *
0'
#15000
b110 !
b110 .
b101 "
b101 -
1#
#20000
0#
b111 (
b111 ,
b11 $
b11 )
1'
#25000
1#
#30000
0#
b100 &
b100 +
b11 %
b11 *
0'
#35000
bx !
bx .
b111 "
b111 -
1#
#40000
0#
